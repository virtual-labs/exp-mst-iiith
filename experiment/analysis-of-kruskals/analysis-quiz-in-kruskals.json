{
    "version": 2.0,
    "questions": [
        {
            "question": "1. What is true about the time complexity of Kruskal's algorithm?",
            "answers": {
                "a": "Best case is when given graph is a tree itself",
                "b": "Worst case is when all edges are to be checked.",
                "c": "Time complexity is O(E log(V) + E log(E)), where E is the number of edges and V is the number of Vertices",
                "d": "All of the above"
            },
            "correctAnswer": "d",
            "explanations": {
                "a": "If a graph is the tree itself, then it is a MST. But there are some more options which can be true.",
                "b": "If all the edges are to be checked, then it would take maximum time. But there are some more options which can be true.",
                "c": "Time complexity is correct. But there are some more options which can be true."
            },
            "difficulty": "intermediate"
        },
        {
            "question": "2. Can Kruskal's algorithm produce more than one MST without any changes in the code?",
            "answers": {
                "a": "Yes",
                "b": "No",
                "c": "Depends",
                "d": "Can\u2019t say"
            },
            "correctAnswer": "b",
            "explanations": {
                "b": "Kruskal\u2019s cannot produce any different MST, if the edge selection is not modified or randomised, for equal weighing edges."
            },
            "difficulty": "beginner"
        },
        {
            "question": "3. What is the best case Time Complexity of Kruskal's Algorithm? (Let V be the number of vertices, E be the number of edges)",
            "answers": {
                "a": "O((V-1)log(E)+Elog(E))",
                "b": "O(Vlog(E)+Elog(E))",
                "c": "O(Vlog(V)+Elog(E))",
                "d": "None of the above"
            },
            "correctAnswer": "a",
            "explanations": {},
            "difficulty": "advanced"
        },
        {
            "question": "4. In which scenario, Kruskal\u2019s algorithm will result in the best time complexity?",
            "answers": {
                "a": "Maximum number of edges and maximum number of cycles",
                "b": "Maximum number of edges and minimum number of cycles",
                "c": "Minimum number of edges and maximum number of cycles",
                "d": "Minimum number of edges and minimum number of cycles"
            },
            "correctAnswer": "d",
            "explanations": {
                "d": "Kruskal's Algorithm picks one edge every time to build a MST, and uses a disjoint set data structure to check for cycles. Hence it will perform fastest when there will be the least number of edges and cycles present in the graph."
            },
            "difficulty": "beginner"
        }
    ]
}
